package item_views

import (
	"fmt"
//	"strconv"

	"github.com/kyp0717/ew-system/controllers"
	"github.com/kyp0717/ew-system/views"
	"github.com/gofiber/fiber/v2"
)

templ ListItemIndex(items []controllers.Item) {
    <div class="max-w-2xl mx-auto">
        <div class="flex justify-between max-w-2xl mx-auto border-b border-b-slate-600 mb-8 pb-2">
            <h1 class="text-2xl font-bold text-center">
                Inventory List
            </h1>
            <div class="flex gap-2">
                <a hx-swap="transition:true" class="badge badge-info p-4 hover:scale-[1.1]" href="/inventory/create">
                    New
                </a>
            </div>
        </div>
        <table class="table w-full">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Name</th>
                    <th>Quantity</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                for _, item := range items {
                    <tr>
                        <th>{ item.SKU }</th>
                        <td>{ item.ItemName }</td>
                        <td>{ item.Description }</td>
                        <td class="flex justify-center gap-2">
                            <a
                                hx-swap="transition:true"
                                href={ templ.URL(fmt.Sprintf("/inventory/edit/%d", item.SKU)) }
                                class="badge badge-primary p-3 hover:scale-[1.1]"
                            >
                                Edit
                            </a>
                            <button
                                hx-swap="transition:true"
                                hx-delete={ fmt.Sprintf("/inventory/delete/%d", item.SKU) }
                                hx-confirm={ fmt.Sprintf("Are you sure you want to delete the item with ID #%d?", item.SKU) }
                                onClick="this.addEventListener('htmx:confirm', (e) => {
                                    e.preventDefault()
                                    Swal.fire({
                                        title: 'Do you want to perform this action?',
                                        text: `${e.detail.question}`,
                                        icon: 'warning',
                                        background: '#1D232A',
                                        color: '#A6ADBA',
                                        showCancelButton: true,
                                        confirmButtonColor: '#3085d6',
                                        cancelButtonColor: '#d33',
                                        confirmButtonText: 'Yes'
                                    }).then((result) => {
                                        if(result.isConfirmed) e.detail.issueRequest(true);
                                    })
                                })"
                                hx-target="body"
                                class="badge badge-error p-3 hover:scale-[1.1]"
                            >
                                Delete
                            </button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
} 
templ ListItem(
	page string,
	fromProtected, isError bool,
	msg fiber.Map,
	username string,
	cmp templ.Component,
) {
	@views.Layout(page, fromProtected, isError, msg, username) {
		@cmp
	}
}