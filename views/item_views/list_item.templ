package item_views

import (
	"fmt"
	"github.com/kyp0717/ew-system/controllers"
	"github.com/gofiber/fiber/v2"
	"github.com/kyp0717/ew-system/views"
)

templ ListItemIndex(items []controllers.ProcessedItem, fieldNames []string) {
    <div class="max-w-2xl mx-auto">
        <div class="flex justify-between max-w-2xl mx-auto border-b border-b-slate-600 mb-8 pb-2">
            <h1 class="text-2xl font-bold text-center">
                Inventory List
            </h1>
            <div class="flex gap-2">
                <a hx-swap="transition:true" class="badge badge-info p-4 hover:scale-[1.1]" href="/inventory/create">
                    New
                </a>
            </div>
        </div>
        <table class="table w-full">
            <thead>
                <tr>
                    <th>Actions</th>
                    for _, field := range fieldNames {
                        <th>{ field }</th>
                    }
                </tr>
            </thead>
            <tbody>
                for _, item := range items {
                    <tr>
                        <td class="flex justify-center gap-2">
                            <a
                                hx-swap="transition:true"
                                href={ templ.SafeURL(fmt.Sprintf("/inventory/edit/%s", item.Values[0])) }
                                class="badge badge-primary p-3 hover:scale-[1.1]"
                            >
                                Edit
                            </a>
                            <button
                                hx-swap="transition:true"
                                hx-delete={ fmt.Sprintf("/inventory/delete/%s", item.Values[0]) }
                                hx-confirm={ fmt.Sprintf("Are you sure you want to delete the item with SKU #%s?", item.Values[0]) }
                                class="badge badge-error p-3 hover:scale-[1.1]"
                            >
                                Delete
                            </button>
                        </td>
                        for _, value := range item.Values {
                            <td>{ value }</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    </div>
}


templ ListItem(
	page string,
	fromProtected, isError bool,
	msg fiber.Map,
	username string,
	cmp templ.Component,
) {
	@views.Layout(page, fromProtected, isError, msg, username) {
		@cmp
	}
}
